Processing FTML with SILE
(work in progress)

(1) Setup
The 'ftml' class is defined by the ftml.lua and ftml.sil files, which are in the classes folder. Normal SILE processing will look for a classes folder in the same folder where the input file resides. The purpose of this class is to convert the FTML XML into commands for SILE to process the input file and generate a PDF output.

(2) Sample input file
AndikaTest.xml is an FTML file which can be used for testing.

(3) Command line 
sile -e "SILE.scratch.ftmlfontlist={'Andika New Basic Bold','Andika New Basic Italic'}" -d ftml -I ftml AndikaTest.xml > AndikaTest.log

(a) -e "SILE.scratch.ftmlfontlist={'Andika New Basic Bold','Andika New Basic Italic'}"
The -e option instructs SILE to evaluate a command, in this case passing the names of two fonts. If the -e option is omitted, processing will use the font specified in the FTML file, which, for the the AndikaTest.xml file, is "Andika New Basic", which will result in Andika New Basic (Regular) being used.

(b) -d ftml
The -d option turns on SILE's debug trace for items tagged as 'ftml'.

(c) -I ftml AndikaTest.xml
The -I option includes the ftml class defined by the ftml.sil/ftml.lua files.

(d) > AndikaTest.log
sends the output to a log file, which is useful if the -d ftml option is used, since this generates quite a lot of information.

The simplest command would be: sile -I ftml AndikaTest.xml (which would use font information from the FTML file and not generate a debug trace).

(4) Known problems
The end of the page is detected, but the contents aren't output. The result is that any tests longer than a page only show the first page.

